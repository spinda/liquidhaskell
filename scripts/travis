#!/bin/bash

set -e

export PATH="$(pwd):$PATH"

## Helper Functions

# Source: https://github.com/travis-ci/travis-build/blob/fc4ae8a2ffa1f2b3a2f62533bbc4f8a9be19a8ae/lib/travis/build/script/templates/header.sh
function travis_retry {
  local result=0
  local count=1
  while [ $count -le 3 ]; do
    [ $result -ne 0 ] && {
      echo -e "\n${RED}The command \"$@\" failed. Retrying, $count of 3.${RESET}\n" >&2
    }
    "$@"
    result=$?
    [ $result -eq 0 ] && break
    count=$(($count + 1))
    sleep 1
  done

  [ $count -eq 3 ] && {
    echo "\n${RED}The command \"$@\" failed 3 times.${RESET}\n" >&2
  }

  return $result
}

function prevent_timeout {
  local cmd="$@"

  $cmd &
  local cmd_pid=$!

  poke_stdout &
  local poke_pid=$!

  wait $cmd_pid
  exit_code=$?
  kill $poke_pid

  return $exit_code
}

function poke_stdout {
  # Print an invisible character every minute
  while true; do
    echo -ne "\xE2\x80\x8B"
    sleep 60
  done
}

## Testing Stages

function install_ocaml {
  travis_retry sudo apt-get update
  travis_retry sudo apt-get install ocaml camlidl
}

function setup_cabal {
  travis_retry cabal update
}

function install_fixpoint {
  git clone git://github.com/ucsd-progsys/liquid-fixpoint.git /tmp/fixpoint
  pushd /tmp/fixpoint
  travis_retry cabal install --only-dependencies
  cabal install -fbuild-external
  popd
}

function install_smt {
 local smt="$1"

 curl "http://goto.ucsd.edu/~gridaphobe/$smt" -o "$HOME/.cabal/bin/$smt"
 chmod a+x "$HOME/.cabal/bin/$smt"
}

function install_cabal_deps {
  travis_retry cabal install --only-dependencies --enable-tests
}

function do_build {
  cabal configure -fdevel -O2 --enable-tests -v2
  cabal build
  cabal copy
  cabal register
}

function do_test {
  local tests="$1"
  local smt="$2"

  prevent_timeout ./dist/build/test/test --pattern "$tests/" --smtsolver "$smt" -j2 +RTS -N2 -RTS
}

function test_source_pkg {
  cabal sdist

  local src_tgz="$(cabal info . | awk '{print $2 ".tar.gz";exit}')"

  pushd dist
  if [ -f "$src_tgz" ]; then
    cabal install "$src_tgz"
  else
    echo "expected '$src_tgz' not found"
    return 1
  fi
  popd dist
}

function setup_env {
  mkdir cow_store
  mkdir union_mount
}

function boxme {
  ./unionfs -o cow,relaxed_permissions,hide_meta_files ./cow_store=RW:/=RO:./cow_store=RW ./union_mount
  ./proot-x86_64 -r ./union_mount -b /dev:/dev -b /home:/home -b /proc:/proc -b /sys:/sys -b /tmp:/tmp -0 scripts/travis execute "$1" "$2"
}

function execute {
  local tests="$1"
  local smt="$2"
  
  install_ocaml
  setup_cabal
  install_fixpoint
  install_smt "$smt"

  setup_env
  install_cabal_deps

  do_build
  do_test "$tests" "$smt"
  test_source_pkg
}

## Run Test Stage

stage="$1"
shift

set -x
$stage "$@"

